name: Build and Deploy Code

on:
  push:
  pull_request:

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.GITHUB_TOKEN}}
      DATABASE_PORT: ${{secrets.GITHUB_TOKEN}}
      DATABASE_PASSWORD: ${{secrets.GITHUB_TOKEN}}
      DATABASE_NAME: ${{secrets.GITHUB_TOKEN}}
      DATABASE_USERNAME: ${{secrets.GITHUB_TOKEN}}
      SECRET_KEY: ${{secrets.GITHUB_TOKEN}}
      ALGORITHM: ${{secrets.GITHUB_TOKEN}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.GITHUB_TOKEN}} 

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.GITHUB_TOKEN}}
          POSTGRES_DB: ${{secrets.GITHUB_TOKEN}}_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Pulling git repo
      uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy black isort pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Check import sorting with isort
    #   run: |
    #     isort --check-only --diff .
    # - name: Format check with black
    #   run: |
    #     black .
    # - name: Type check with mypy
    #   run: |
    #     mypy --ignore-missing-imports --show-error-codes --pretty src/
    - name: Test with pytest
      run: |
        pytest